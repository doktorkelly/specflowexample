<?xml version='1.0' encoding='UTF-8'?>

<!-- VERSION 2014-03-26T11:30:00 -->

<Project 
	DefaultTargets="Show"
	xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<ProjectName>specflow01.NUTest.AT</ProjectName>

		<NUnitExe>..\packages\NUnit.Runners.2.6.3\tools\nunit-console.exe</NUnitExe>
		<NUTestAssemblies>bin\$(Configuration)\$(ProjectName).dll</NUTestAssemblies>

		<SpecflowExe>..\packages\SpecFlow.1.9.0\tools\specflow.exe</SpecflowExe>
		<SpecProjectFile>$(ProjectName).csproj</SpecProjectFile>
		<SpecAssemblies>bin\$(Configuration)\$(ProjectName).dll</SpecAssemblies>

		<ReportHome>packages\ReportGenerator.1.9.1.0</ReportHome>
		<ReportExe>$(ReportHome)\ReportGenerator.exe</ReportExe>
	</PropertyGroup>

	<!--
	<Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
	-->
	<Import Project="$(ProjectName).csproj" />
	<Import Project="..\packages\SpecFlow.1.9.0\Tools\TechTalk.SpecFlow.targets" />

	<!-- ===================================================================== -->
	<Target Name="Show" >
		<Message Text="Configuration:   $(Configuration)" />
		<Message Text="OutputPath:      $(OutputPath)" />
		<Message Text="Targets:" />
		<Message Text="- Build" />
		<Message Text="- SpecGen" />
		<Message Text="- NUTest" />
		<Message Text="- NUSpecRun" />
	</Target>

	<!-- builds ============================================================== -->
	<!-- build: remove depends on specgen, if specflow.targets are imported!   -->
	<Target Name="Build" DependsOnTargets="SpecGen">
		<MSBuild 
			Targets="Clean;Rebuild" 
			Projects="$(ProjectName).csproj"
			ContinueOnError="false" />
	</Target>

	<Target Name="SpecGen" >
		<Exec Command="$(SpecflowExe) generateall $(SpecProjectFile) /force /verbose "/>
	</Target>

	<!-- tests =============================================================== -->
	<Target Name="NUTest" >
		<Exec Command="$(NUnitExe) $(NUTestAssemblies) /xml=reports/NUnitReport.xml"/>
	</Target>

	<Target Name="NUSpecRun" >
		<Exec Command="$(NUnitExe) $(SpecAssemblies) /xml=reports/NUSpecReport.xml"
			ContinueOnError="true"/>
		<Exec Command="$(SpecflowExe) nunitexecutionreport $(SpecProjectFile) /xmlTestResult:reports/NUSpecReport.xml /out:reports/NUSpecReport.html"/>
	</Target>

</Project>
